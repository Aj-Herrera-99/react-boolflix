#root {
    flex-grow: 1;
}

.loader {
    width: 48px;
    height: 48px;
    border: 5px solid #fff;
    border-bottom-color: #ff3d00;
    border-radius: 50%;
    display: inline-block;
    box-sizing: border-box;
    animation: rotation 1s linear infinite;
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* slider-parent ha una proprietà --quantity = conteggio dei children */
.slider-child {
    --duration: 180s;
    animation: slider var(--duration) linear infinite;
    animation-delay: calc(
        (var(--duration) / var(--quantity)) *
            (var(--position) - var(--quantity))
    );
    /*! delay-box1 < delay-box2 < . . . < delay-last-box = 0 */
    /*  NB: il primo box dunque partira molto prima (delay < 0) rispetto all'esecuzione dell animazione mentre l ultimo box partira al partire dell'esecuzione (delay = 0), linearità garantita   */
}
/* setting iniziale: from tutto a destra fuori dal container -> to tutto a sinistra fuori dal container  */
@keyframes slider {
    from {
        translate: calc(100% * (var(--quantity) - (var(--position) - 1)));
        /* sposto a dx quanto? quanto la dimensione massima del box (100%) per un certo offset dato dal numero tot di box e la sua posizione; fino a spingere i box (TUTTE UNO
    SOVRAPPOSTO ALL'ALTRO) sul bordo esterno destro del container padre */
    }
    to {
        translate: calc(-100% * var(--position));
        /** sposto a sx quanto? quanto la dimensione massima del box per un certo offset dato dalla sua posizione*/
        /* NB: questo sarà dunque un valore negativo -> spingo i box (TUTTE UNO SOVRAPPOSTO ALL'ALTRO) sul bordo esterno sinistro del container padre*/
    }
}

.slider-child:has(~ :hover) {
    animation-play-state: paused;
}

/** seleziona il child in hover  */
.slider-child:hover {
    animation-play-state: paused;
}

/** seleziona tutti i siblings successivi al sibling in hover */
.slider-child:hover ~ .slider-child {
    animation-play-state: paused;
    color: #000000d5;
}

/* ogni card ha un div wrapper figlio anim che permette, all'hover su di essa, un'altra animazione senza sovrascrivere slider */
.bounce-anim:hover {
    animation: bounce 2.5s ease-out infinite;
}

@keyframes bounce {
    0%,
    50%,
    100% {
        transform: translateY(0px);
    }

    25%,
    75% {
        transform: translateY(-5px);
    }
}

.scrollbar-hide {
    -ms-overflow-style: none;
    /* Internet Explorer 10+ */
    scrollbar-width: none;
    /* Firefox */
}

.scrollbar-hide::-webkit-scrollbar {
    display: none;
    /* WebKit */
}

.debug {
    border: solid 1px #ff3d00;
}
